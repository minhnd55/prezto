#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi
# Customize to your needs...
################################################################################
[[ -s "${ZDOTDIR:-$HOME}/.zprezto/.ztoken" ]] && . "${ZDOTDIR:-$HOME}/.zprezto/.ztoken"
# VARIABLES
export PROJECT_PATH=$HOME/Projects
export PATH=$HOME/bin:$HOME/.config/composer/vendor/bin:$HOME/.local/bin:$HOME/.yarn/bin:$PATH
export PATH="/usr/lib/ccache/bin/:$PATH"
export CGR_BIN_DIR=$HOME/.config/composer/vendor/bin
export POWERLINE_CONFIG_COMMAND="$HOME/.local/bin/powerline-config"
export EDITOR="vim"
export VISUAL="vim"
# ssh
export SSH_KEY_PATH="$HOME/.ssh/id_rsa"
# Compilation flags
export ARCHFLAGS="-arch x86_64"
# Python path
# export PYTHONPATH=/usr/local/lib/python2.7/site-packages/
# GoPath
export GOVENDOR=$PROJECT_PATH/govendor
export GOCODE=$PROJECT_PATH/gocode
export GOPATH=$GOVENDOR:$GOCODE
export PATH=$PATH:$GOVENDOR/bin:$GOCODE/bin
# if [[ "$OSTYPE" == darwin* ]]; then
#     export GOROOT=/usr/local/opt/go/libexec
#     export PATH=$PATH:$GOROOT/bin
# else
#     export GOROOT=$HOME/go
#     export PATH=$PATH:$GOROOT/bin
# fi
# Android
# export ANDROID_HOME=/usr/local/opt/android-sdk
export ANDROID_HOME=$HOME/Android/Sdk
# Git diff highlight
if [[ "$OSTYPE" == darwin* ]]; then
  export PATH=$PATH:$(brew --prefix git)/share/git-core/contrib/diff-highlight
fi
# Docker
# export DOCKER_HOST=tcp://docker.tunght.com:2376
# export DOCKER_CERT_PATH=$HOME/.docker
# export DOCKER_TLS_VERIFY=1
# export DOCKER_MACHINE_NAME="default"
# export DOCKER_MACHINE_PS1_SHOWSTATUS=true
export OVPN_DATA="ovpn-data"
# WebStorm
# export WEBSTORM_PATH=/opt/webstorm
# [[ -s $WEBSTORM_PATH ]] && export PATH=$PATH:$WEBSTORM_PATH/bin
# Facebook PathPicker
export FPP_EDITOR=subl
# Ibus
# export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
# Sound for Arch
export ALSA_CARD=HDMI
# # Hub
# export PATH="/opt/hub:$PATH"
# Gem
# export PATH="/home/rocco/.gem/ruby/2.2.0/bin:$PATH"
# Heroku
export PATH="/usr/local/heroku/bin:$PATH"
# export HISTCONTROL=ignoreboth
export BROWSER="google-chrome-stable"
# fzf
if (( $+commands[rg] )); then
  if (( $+commands[git] )) then
    export FZF_DEFAULT_COMMAND='git ls-tree -r --name-only HEAD || rg --files'
  else
    export FZF_DEFAULT_COMMAND='rg --files'
  fi
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi
export FZF_TMUX=1
export FZF_DEFAULT_OPTS=""
if (( $+commands[bat] )); then
  export FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS} --preview 'bat --line-range :100 --color \"always\" {}'"
fi
################################################################################
# ALIAS
if (( $+commands[exa] )); then
  alias ls="exa --group-directories-first"
  alias l="ls -l"
  alias la="l -a"
fi
if (( $+commands[bat] )); then
  alias cat="bat --paging=never --style=plain"
fi
if (( $+commands[prettyping] )); then
  alias ping="prettyping --nolegend"
fi
if (( $+commands[ncdu] )); then
  alias du="ncdu --color dark -rr -x --exclude .git --exclude node_modules"
fi
# Update packages
alias updpkg="updpkgsums && /bin/rm .SRCINFO && makepkg --printsrcinfo > .SRCINFO"
# PHP
# if (( $+commands[php70] )); then
#   alias php="php70"
# fi
# Sublime
alias st="subl"
alias todo="st $HOME/my.todo"
# Laravel
alias lv="php72 artisan"
alias a="php72 artisan"
alias en="envoy run"
# Composer
# if (( $+commands[hhvm] )); then
#   alias composer="hhvm -v ResourceLimit.SocketDefaultTimeout=180 -v Http.SlowQueryThreshold=180000 $(which composer)"
# fi
alias php72="/usr/bin/php"
alias c="php $(which composer)"
alias c70="php70 $(which composer)"
alias c71="php71 $(which composer)"
alias c72="php72 $(which composer)"
# Vagrant
alias v="vagrant"
# Symfony
alias sf="symfony"
alias s="php72 bin/console"
alias srs="s d:d:d --force && s d:d:cr && s d:s:c && s d:f:l --append && s h:f:l --append"
# Git
alias gfl="git flow"
if (( $+commands[hub] )); then
  # eval "$(hub alias -s)"
  [[ -s $HOME/Projects/govendor/src/github.com/github/hub/etc ]] && fpath=($HOME/Projects/govendor/src/github.com/github/hub/etc $fpath)
fi
# chmod
alias mx='chmod a+x'
alias 000='chmod 000'
alias 400='chmod 400'
alias 644='chmod 644'
alias 755='chmod 755'
# Random
alias makepass='openssl rand -base64 32'
# Program
alias hosts='sudo $EDITOR /etc/hosts'
alias sshconfig='$EDITOR ~/.ssh/config'
alias currentwifi="networksetup -getairportnetwork en1"
alias week='date +%V'
# IP
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
alias myips="ifconfig -a | perl -nle'/(\d+.\d+.\d+.\d+)/ && print $1'"
# File size
alias fs="stat -f \"%z bytes\""
if [[ "$OSTYPE" == darwin* ]]; then
  alias shuttleconfig="st $HOME/.shuttle.json"
  alias chrome='open -a "Google Chrome"'
  alias stfu="osascript -e 'set volume output muted true'"
  alias vol10="osascript -e 'set volume 10'"
  alias vol5="osascript -e 'set volume 5'"
  alias localip="ipconfig getifaddr en0"
  alias whois="whois -h whois-servers.net"
  alias flush="dscacheutil -flushcache"
  alias cleanup="find . -name '*.DS_Store' -type f -ls -delete"
  alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
  alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
fi
# Magento 2
alias magento="php70 bin/magento"
alias mage="php70 $(which magento)"
alias m="mr2"
alias pestle="php70 $(which pestle.phar)"
alias mp="pestle"
alias mrf="redis-cli flushall"
alias mc="mg2-codegen"
alias mcc="/usr/bin/rm -rf var/di var/generation/* var/session/* var/cache/* var/page_cache/* && m c:f"
alias mcf="/usr/bin/rm -rf pub/static/* var/view_preprocessed/* && m c:f"
alias mccf="/usr/bin/rm -rf var/di var/generation/* var/session/* var/cache/* var/page_cache/* pub/static/* var/view_preprocessed/* && m c:f"
alias mccfu="mccf && m setup:upgrade"
alias mcu="mcc && m setup:upgrade"
alias mr="php70 $(which n98-magerun.phar)"
alias mr2="php70 $(which n98-magerun2.phar)"
alias q="q -O -H"
alias qp="q -d '|'"
function mr_base () {
  mr config:set web/unsecure/base_url "http://$1/";
  mr config:set web/secure/base_url "https://$1/";
}
function mr_base_same () {
  mr config:set web/unsecure/base_url "$1";
  mr config:set web/secure/base_url "$1";
}
function xdebug () {
  case $1 in
    on)
      if [[ -f /etc/php70/conf.d/xdebug.ini.deactivated ]] then
        sudo mv /etc/php70/conf.d/xdebug.ini.deactivated /etc/php70/conf.d/xdebug.ini
        sudo systemctl restart php70-fpm
      fi
      if [[ -f /etc/php71/conf.d/xdebug.ini.deactivated ]] then
        sudo mv /etc/php71/conf.d/xdebug.ini.deactivated /etc/php71/conf.d/xdebug.ini
        sudo systemctl restart php71-fpm
      fi
      if [[ -f /etc/php/conf.d/xdebug.ini.deactivated ]] then
        sudo mv /etc/php/conf.d/xdebug.ini.deactivated /etc/php/conf.d/xdebug.ini
        sudo systemctl restart php-fpm
      fi
      export XDEBUG_CONFIG="idekey=PHPSTORM"
    ;;
    off)
      if [[ -f /etc/php70/conf.d/xdebug.ini ]] then
        sudo mv /etc/php70/conf.d/xdebug.ini /etc/php70/conf.d/xdebug.ini.deactivated
        sudo systemctl restart php70-fpm
      fi
      if [[ -f /etc/php71/conf.d/xdebug.ini ]] then
        sudo mv /etc/php71/conf.d/xdebug.ini /etc/php71/conf.d/xdebug.ini.deactivated
        sudo systemctl restart php71-fpm
      fi
      if [[ -f /etc/php/conf.d/xdebug.ini ]] then
        sudo mv /etc/php/conf.d/xdebug.ini /etc/php/conf.d/xdebug.ini.deactivated
        sudo systemctl restart php-fpm
      fi
      unset XDEBUG_CONFIG
    ;;
    *)
      echo "Usage: xdebug on|off"
    ;;
  esac
}
function phps () {
  case $1 in
    70)
      ln -sf /usr/bin/php70 "$HOME/bin/php" && rehash
    ;;
    71)
      ln -sf /usr/bin/php71 "$HOME/bin/php" && rehash
    ;;
    off)
      [ -f "$HOME/bin/php" ] && unlink "$HOME/bin/php" && rehash
    ;;
    *)
      echo "Alias php70/php71 to php"
      echo "Usage: phps 70|71"
    ;;
  esac
}
# Tmux
alias tmux="tmux -2"
# npm_lazy
alias lnpm="npm --registry http://localhost:4873/"
# ag
alias ag='ag --path-to-ignore ~/.agignore'
# Anybar
function anybar { echo -n $1 | nc -4u -w0 localhost ${2:-1738}; }
# Xdebug
alias xy='export XDEBUG_CONFIG="remote_enable=1 remote_mode=req remote_port=9000 remote_host=127.0.0.1 remote_connect_back=0"'
alias xn='unset XDEBUG_CONFIG'
# howdoi
alias h='function hdi(){ howdoi $* -c -n 5; }; hdi'
# yii
function y {
  if [[ -s ./yiic ]] then
    ./yiic "$@"
  elif [[ -s ./protected/yiic ]]; then
    ./protected/yiic "$@"
  else
    echo "Yii not found"
    return 1
  fi
  return 0
}
################################################################################
# LIBRARY
# MeRC
[[ -s $HOME/.merc ]] && . $HOME/.merc
# rvm
# if [[ -s $HOME/.rvm/scripts/rvm ]]; then
  # . $HOME/.rvm/scripts/rvm
  # export PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
# fi
# Mark
# [[ -s $HOME/.mark.sh ]] && . $HOME/.mark.sh
# Perlbrew
# [[ -s $HOME/perl5/perlbrew/etc/bashrc ]] && . $HOME/perl5/perlbrew/etc/bashrc
# Wordpress
[[ -s $HOME/wp-completion.bash ]] && . $HOME/wp-completion.bash
# NVM
export NVM_DIR="${HOME}/.nvm"
[ -s "$NVM_DIR/nvm.sh"  ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
export PATH="$(yarn global bin):$PATH"

# PyEnv
# export PATH="${HOME}/.local/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PYTHON_CONFIGURE_OPTS="--enable-shared"
if (( $+commands[pyenv] )); then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# phpbrew
export PHPBREW_RC_DISABLE=1
[[ -s $HOME/.phpbrew/bashrc ]] && export PHPBREW_RC_DISABLE=1 && . $HOME/.phpbrew/bashrc
# export PHPBREW_SET_PROMPT=1

###-begin-pm2-completion-###
### credits to npm for the completion file model
#
# Installation: pm2 completion >> ~/.bashrc  (or ~/.zshrc)
#

COMP_WORDBREAKS=${COMP_WORDBREAKS/=/}
COMP_WORDBREAKS=${COMP_WORDBREAKS/@/}
export COMP_WORDBREAKS

if type complete &>/dev/null; then
  _pm2_completion () {
    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$COMP_CWORD" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           pm2 completion -- "${COMP_WORDS[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _pm2_completion pm2
elif type compctl &>/dev/null; then
  _pm2_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       pm2 completion -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _pm2_completion + -f + pm2
fi
###-end-pm2-completion-###

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

transfer() {
  if [ $# -eq 0 ]; then
    echo "No arguments specified. Usage:\necho transfer /tmp/test.md\ncat /tmp/test.md | transfer test.md";
    return 1;
  fi
  tmpfile=$( mktemp -t transferXXX );
  if tty -s; then
    basefile=$(basename "$1" | sed -e 's/[^a-zA-Z0-9._-]/-/g');
    curl --progress-bar --upload-file "$1" "https://transfer.sh/$basefile" >> $tmpfile;
  else
    curl --progress-bar --upload-file "-" "https://transfer.sh/$1" >> $tmpfile;
  fi;
  echo "" >> $tmpfile;
  cat $tmpfile;
  rm -f $tmpfile;
}

test -e "$HOME/k/k.sh" && source "$HOME/k/k.sh"
alias ka="k -Ah --no-vcs"

test -e "$PROJECT_PATH/github/fcambus/ansiweather/ansiweather.plugin.zsh" && source "$PROJECT_PATH/github/fcambus/ansiweather/ansiweather.plugin.zsh"

# zsh-nvm
[[ -s "${HOME}/.zsh-nvm/zsh-nvm.plugin.zsh" ]] && . "${HOME}/.zsh-nvm/zsh-nvm.plugin.zsh"
[[ -s "${HOME}/.zsh-better-npm-completion/zsh-better-npm-completion.plugin.zsh" ]] && . "${HOME}/.zsh-better-npm-completion/zsh-better-npm-completion.plugin.zsh"
# luarocks
if (( $+commands[luarocks] )); then
  # eval $(luarocks path --bin)
  export PATH=$PATH:$HOME/.luarocks/bin
fi

# FZF
# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'
